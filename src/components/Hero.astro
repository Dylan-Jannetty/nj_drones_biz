---
interface Props {
  title: string;
  subtitle: string;
  videoSrc?: string;
  imageSrc?: string;
  showCTA?: boolean;
}

const {
  title,
  subtitle,
  videoSrc,
  imageSrc = "/images/hero-background.jpg",
  showCTA = true,
} = Astro.props;
---

<section
  class="relative min-h-screen flex items-center justify-start overflow-hidden"
>
  <!-- Background Video -->
  {
    videoSrc && (
      <video
        autoplay
        muted
        loop
        playsinline
        class="absolute inset-0 w-full h-full object-cover aspect-video hero-video"
        poster={imageSrc}
      >
        <source src={videoSrc} type="video/mp4" />
        <source src={videoSrc} type="video/webm" />
        Your browser does not support the video tag.
      </video>
    )
  }

  <!-- Background Image Fallback -->
  {
    !videoSrc && (
      <div
        class="absolute inset-0 bg-cover bg-center bg-no-repeat"
        style={`background-image: url('${imageSrc}')`}
      />
    )
  }

  <!-- Subtle Overlay -->
  <div
    class="absolute inset-0 bg-gradient-to-b from-black/20 via-transparent to-black/30"
  >
  </div>

  <!-- Content -->
  <div class="relative z-10 text-white max-w-7xl mx-auto px-6 lg:px-8 w-full">
    <div class="max-w-3xl">
      <!-- Location/Context -->
      <p class="text-lg md:text-xl font-light mb-4 text-white/90 tracking-wide">
        New Jersey & Beyond
      </p>

      <!-- Main Title -->
      <h1
        class="text-5xl md:text-7xl lg:text-8xl font-bold mb-8 leading-[0.9] tracking-tight"
      >
        <span class="block">Aerial</span>
        <span class="block text-white/80">Storytelling</span>
      </h1>

      <!-- Subtitle -->
      <p
        class="text-xl md:text-2xl mb-12 text-white/90 font-light leading-relaxed max-w-2xl"
      >
        Professional drone videography that captures your vision from above.
        Creating cinematic footage for real estate, weddings, and business.
      </p>

      {
        showCTA && (
          <div class="flex flex-col sm:flex-row gap-6">
            <a
              href="/contact"
              class="btn-primary-modern text-lg px-10 py-4 font-medium"
            >
              Start Your Project
            </a>
            <a
              href="/portfolio"
              class="btn-secondary-modern text-lg px-10 py-4 font-medium"
            >
              View Portfolio
            </a>
          </div>
        )
      }
    </div>
  </div>

  <!-- Scroll indicator -->
  <div
    class="absolute bottom-12 left-6 lg:left-8 cursor-pointer scroll-indicator"
  >
    <div
      class="flex items-center space-x-3 text-white/70 hover:text-white transition-colors duration-300"
    >
      <div class="w-px h-16 bg-white/30"></div>
      <span class="text-sm font-light tracking-wider">SCROLL</span>
    </div>
  </div>
</section>

<script>
  // Smooth scroll on scroll indicator click
  document.addEventListener("DOMContentLoaded", () => {
    const scrollIndicator = document.querySelector(".scroll-indicator");
    if (scrollIndicator) {
      scrollIndicator.addEventListener("click", () => {
        window.scrollTo({
          top: window.innerHeight,
          behavior: "smooth",
        });
      });
    }

    // Video ease-in effect
    const video = document.querySelector(".hero-video") as HTMLVideoElement;
    if (video) {
      // Start with video hidden
      video.style.opacity = "0";
      video.style.transition = "opacity 1s ease-in";
      
      // Multiple event listeners to ensure video shows
      const showVideo = () => {
        video.style.opacity = "1";
        console.log("Video fade-in triggered");
      };
      
      // Show video when it can play
      video.addEventListener("canplay", showVideo);
      video.addEventListener("loadeddata", showVideo);
      video.addEventListener("loadedmetadata", showVideo);
      
      // Faster fallback in case video events don't fire
      setTimeout(() => {
        if (video.style.opacity === "0") {
          console.log("Video fade-in fallback triggered");
          showVideo();
        }
      }, 200);
      
      // Parallax effect for hero video
      window.addEventListener("scroll", () => {
        const scrolled = window.pageYOffset;
        const parallax = scrolled * 0.5;
        video.style.transform = `translateY(${parallax}px)`;
      });
    }

    // Fade in animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: "0px 0px -50px 0px",
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("animate-fade-in-up");
        }
      });
    }, observerOptions);

    // Observe all sections for animation
    document
      .querySelectorAll("section:not(:first-child)")
      .forEach((section) => {
        observer.observe(section);
      });
  });
</script>

<style>
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in-up {
    animation: fadeInUp 0.8s ease-out forwards;
  }

  section:not(:first-child) {
    opacity: 0;
  }

  section:first-child {
    opacity: 1;
  }

  /* Hero video starts hidden for fade-in effect */
  .hero-video {
    opacity: 0;
    transition: opacity 1s ease-in;
  }
</style>

---
import SchemaMarkup from "../components/SchemaMarkup.astro";
import DroneIcon from "../components/DroneIcon.astro";
import "../styles/global.css";
import "../styles/page-transitions.css";
import "../styles/mobile-menu.css";
import "../styles/cursor-drone.css";

interface Props {
  title: string;
  description?: string;
  image?: string;
  type?: string;
}

const {
  title,
  description = "Professional drone videography services for real estate, weddings, automotive, and business promotions in New Jersey and surrounding areas.",
  image = "/images/hero-image.jpg",
  type = "website",
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const isHomePage = Astro.url.pathname === "/";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={canonicalURL} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={image} />

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />

    <!-- Schema Markup -->
    <SchemaMarkup type="organization" />
  </head>
  <body>
    <header>
      <nav
        id="navbar"
        class={`fixed w-full top-0 z-50 transition-all duration-300 ${isHomePage ? "bg-transparent" : "bg-white shadow-sm"}`}
      >
        <div
          class={`container-max section-padding ${isHomePage ? "py-6" : "py-4"}`}
        >
          <div class="flex justify-between items-center">
            <div class="flex items-center">
              <a
                href="/"
                class={`text-2xl font-bold nav-logo ${isHomePage ? "text-white" : "text-primary-600"}`}
              >
                NJ Drones
              </a>
            </div>

            <div class="hidden md:flex space-x-8">
              <a
                href="/"
                class={`nav-link transition-colors ${isHomePage ? "text-white hover:text-primary-200" : "text-gray-700 hover:text-primary-600"}`}
                >Home</a
              >
              <div class="relative group">
                <span
                  class={`nav-link transition-colors cursor-pointer ${isHomePage ? "text-white hover:text-primary-200" : "text-gray-700 hover:text-primary-600"}`}
                  >Services</span
                >
                <div
                  class="absolute top-full left-0 mt-2 w-64 bg-white rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200"
                >
                  <div class="py-2">
                    <a
                      href="/services/real-estate"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-primary-50 hover:text-primary-600"
                      >Real Estate</a
                    >
                    <a
                      href="/services/wedding"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-primary-50 hover:text-primary-600"
                      >Wedding</a
                    >
                    <a
                      href="/services/engagement"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-primary-50 hover:text-primary-600"
                      >Engagement</a
                    >
                    <a
                      href="/services/automotive"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-primary-50 hover:text-primary-600"
                      >Automotive</a
                    >
                    <a
                      href="/services/marine"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-primary-50 hover:text-primary-600"
                      >Marine</a
                    >
                    <a
                      href="/services/business"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-primary-50 hover:text-primary-600"
                      >Business</a
                    >
                  </div>
                </div>
              </div>
              <a
                href="/portfolio"
                class={`nav-link transition-colors ${isHomePage ? "text-white hover:text-primary-200" : "text-gray-700 hover:text-primary-600"}`}
                >Portfolio</a
              >
              <a
                href="/about"
                class={`nav-link transition-colors ${isHomePage ? "text-white hover:text-primary-200" : "text-gray-700 hover:text-primary-600"}`}
                >About</a
              >
              <a
                href="/contact"
                class={`nav-link transition-colors ${isHomePage ? "text-white hover:text-primary-200" : "text-gray-700 hover:text-primary-600"}`}
                >Contact</a
              >
            </div>

            <div class="hidden md:block">
              <a
                href="/contact"
                class={`nav-cta ${isHomePage ? "btn-secondary-modern" : "btn-primary"}`}
                >Get Quote</a
              >
            </div>

            <!-- Mobile menu button -->
            <button
              class="md:hidden nav-mobile-btn relative z-50"
              id="mobile-menu-btn"
            >
              <div class="hamburger-lines">
                <span
                  class={`hamburger-line ${isHomePage ? "bg-white" : "bg-gray-700"}`}
                ></span>
                <span
                  class={`hamburger-line ${isHomePage ? "bg-white" : "bg-gray-700"}`}
                ></span>
                <span
                  class={`hamburger-line ${isHomePage ? "bg-white" : "bg-gray-700"}`}
                ></span>
              </div>
            </button>
          </div>
        </div>
      </nav>
    </header>

    <!-- Mobile Menu Overlay -->
    <div
      id="mobile-menu-overlay"
      class="fixed inset-0 z-40 bg-white transform translate-x-full transition-transform duration-300 ease-in-out md:hidden"
    >
      <div class="pt-20 px-6">
        <nav class="space-y-6">
          <a
            href="/"
            class="block text-2xl font-medium text-gray-900 hover:text-primary-600 transition-colors"
            >Home</a
          >

          <!-- Services Section -->
          <div class="space-y-3">
            <span
              class="block text-2xl font-medium text-gray-900 cursor-default"
              >Services</span
            >
            <div class="ml-4 space-y-2">
              <a
                href="/services/real-estate"
                class="block text-lg text-gray-700 hover:text-primary-600 transition-colors"
                >• Real Estate</a
              >
              <a
                href="/services/wedding"
                class="block text-lg text-gray-700 hover:text-primary-600 transition-colors"
                >• Wedding</a
              >
              <a
                href="/services/engagement"
                class="block text-lg text-gray-700 hover:text-primary-600 transition-colors"
                >• Engagement</a
              >
              <a
                href="/services/automotive"
                class="block text-lg text-gray-700 hover:text-primary-600 transition-colors"
                >• Automotive</a
              >
              <a
                href="/services/marine"
                class="block text-lg text-gray-700 hover:text-primary-600 transition-colors"
                >• Marine</a
              >
              <a
                href="/services/business"
                class="block text-lg text-gray-700 hover:text-primary-600 transition-colors"
                >• Business</a
              >
            </div>
          </div>

          <a
            href="/portfolio"
            class="block text-2xl font-medium text-gray-900 hover:text-primary-600 transition-colors"
            >Portfolio</a
          >
          <a
            href="/about"
            class="block text-2xl font-medium text-gray-900 hover:text-primary-600 transition-colors"
            >About</a
          >
          <a
            href="/contact"
            class="block text-2xl font-medium text-gray-900 hover:text-primary-600 transition-colors"
            >Contact</a
          >

          <div class="pt-6">
            <a
              href="/contact"
              class="block w-full text-center btn-primary text-lg py-4"
              >Get Quote</a
            >
          </div>
        </nav>
      </div>
    </div>

    <!-- Cursor Following Drone -->
    <div
      id="cursor-drone"
      class="fixed pointer-events-none z-30 opacity-0 transition-opacity duration-300"
      style="width: 100px; height: 100px;"
    >
      <!-- Drone SVG will be added by the cursor-drone.js script -->
    </div>

    <!-- Page Transition Overlay -->
    <div
      id="page-transition"
      class="fixed inset-0 z-[9999] pointer-events-none opacity-0"
    >
      <!-- White background overlay -->
      <div id="white-background" class="absolute inset-0 bg-white"></div>

      <!-- Page Content Container - Shows the actual new page content -->
      <div
        id="page-overlay"
        class="absolute inset-0 bg-white transform translate-y-full"
      >
        <!-- New page content will be loaded here -->
        <div id="page-content" class="h-full w-full overflow-hidden">
          <!-- The actual new page content -->
        </div>
      </div>

      <!-- Single Drone Animation Container -->
      <div
        id="drone-flight"
        class="absolute bottom-0 left-1/2 transform -translate-x-1/2 translate-y-full pointer-events-none opacity-0"
      >
        <DroneIcon class="text-primary-600" size="w-24 h-24" animated={true} />
        <!-- Visual string/cable to show drone pulling the page -->
        <div
          id="drone-cable"
          class="absolute top-full left-1/2 transform -translate-x-1/2 w-1 bg-gradient-to-b from-gray-400 to-transparent opacity-70 rounded-full"
        >
        </div>
      </div>
    </div>

    <main
      class={isHomePage ? "" : "pt-18"}
      id="main-content"
      style="opacity: 1;"
    >
      <slot />
    </main>

    <script define:vars={{ isHomePage }} is:inline>
      // Page transition variables
      let isTransitioning = false;
      let cursorDroneInitialized = false;

      // Drone page transition animation
      function animatePageTransition(targetUrl) {
        if (isTransitioning) return;
        isTransitioning = true;

        const pageTransition = document.getElementById("page-transition");
        const mainContent = document.getElementById("main-content");

        // Step 1: Smoothly fade out current page with better easing
        if (mainContent) {
          mainContent.style.transition = "opacity 0.8s cubic-bezier(0.4, 0.0, 0.2, 1)";
          mainContent.style.opacity = "0.2";
        }

        // Step 2: Show white background after smoother delay
        setTimeout(() => {
          pageTransition.style.transition = "opacity 0.4s cubic-bezier(0.4, 0.0, 0.2, 1)";
          pageTransition.style.pointerEvents = "all";
          pageTransition.style.opacity = "1";

          // Step 3: Navigate to the new page with flag after showing white background
          setTimeout(() => {
            sessionStorage.setItem("droneTransition", "true");
            window.location.href = targetUrl;
          }, 250);
        }, 400);
      }

      // Handle page load after drone transition
      function handleDronePageLoad() {
        const isDroneTransition = sessionStorage.getItem("droneTransition");
        console.log("Checking for drone transition:", isDroneTransition);

        // Check if elements exist
        const pageTransition = document.getElementById("page-transition");
        const pageOverlay = document.getElementById("page-overlay");
        const pageContent = document.getElementById("page-content");
        const droneFlight = document.getElementById("drone-flight");
        const droneCable = document.getElementById("drone-cable");
        const mainContent = document.getElementById("main-content");

        console.log("Elements found:", {
          pageTransition: !!pageTransition,
          pageOverlay: !!pageOverlay,
          pageContent: !!pageContent,
          droneFlight: !!droneFlight,
          droneCable: !!droneCable,
          mainContent: !!mainContent,
        });

        // Check for drone transition first and hide content immediately
        if (isDroneTransition) {
          console.log("Drone transition flag detected");
          // Immediately hide main content to prevent flash
          if (mainContent) {
            mainContent.style.opacity = "0";
            mainContent.style.transition = "none";
          }
          
          // Hide original footer completely - it will slide up with the page
          const footer = document.querySelector("footer");
          if (footer) {
            footer.style.display = "none";
          }
        }

        if (isDroneTransition && window.location.pathname !== "/") {
          console.log("Drone transition detected! Starting simple drone animation...");
          // Clear the flag
          sessionStorage.removeItem("droneTransition");
          
          console.log("Creating drone element...");
          
          // Simple drone animation without content manipulation
          const droneSize = Math.min(window.innerWidth, window.innerHeight) * 0.12;
          const centerX = window.innerWidth / 2 - droneSize / 2;
          const startY = window.innerHeight + droneSize;
          const endY = -droneSize - 100;
          
          // Create simple drone element
          const simpleDrone = document.createElement("div");
          simpleDrone.innerHTML = `
            <svg viewBox="0 0 200 200" fill="none" xmlns="http://www.w3.org/2000/svg" style="width: 100%; height: 100%;">
              <g class="drone-body">
                <rect x="80" y="90" width="40" height="20" rx="4" fill="#1d4ed8" stroke="#1e40af" stroke-width="3"/>
                <circle cx="100" cy="105" r="8" fill="#1f2937"/>
                <circle cx="100" cy="105" r="5" fill="#000000"/>
              </g>
              <g class="propeller" style="animation: spin 0.1s linear infinite; transform-origin: 70px 80px;">
                <circle cx="70" cy="80" r="15" fill="none" stroke="#60a5fa" stroke-width="2" opacity="0.6"/>
                <line x1="58" y1="80" x2="82" y2="80" stroke="#60a5fa" stroke-width="2"/>
                <line x1="70" y1="68" x2="70" y2="92" stroke="#60a5fa" stroke-width="2"/>
              </g>
              <g class="propeller" style="animation: spin 0.1s linear infinite; transform-origin: 130px 80px;">
                <circle cx="130" cy="80" r="15" fill="none" stroke="#60a5fa" stroke-width="2" opacity="0.6"/>
                <line x1="118" y1="80" x2="142" y2="80" stroke="#60a5fa" stroke-width="2"/>
                <line x1="130" y1="68" x2="130" y2="92" stroke="#60a5fa" stroke-width="2"/>
              </g>
              <g class="propeller" style="animation: spin 0.1s linear infinite; transform-origin: 70px 120px;">
                <circle cx="70" cy="120" r="15" fill="none" stroke="#60a5fa" stroke-width="2" opacity="0.6"/>
                <line x1="58" y1="120" x2="82" y2="120" stroke="#60a5fa" stroke-width="2"/>
                <line x1="70" y1="108" x2="70" y2="132" stroke="#60a5fa" stroke-width="2"/>
              </g>
              <g class="propeller" style="animation: spin 0.1s linear infinite; transform-origin: 130px 120px;">
                <circle cx="130" cy="120" r="15" fill="none" stroke="#60a5fa" stroke-width="2" opacity="0.6"/>
                <line x1="118" y1="120" x2="142" y2="120" stroke="#60a5fa" stroke-width="2"/>
                <line x1="130" y1="108" x2="130" y2="132" stroke="#60a5fa" stroke-width="2"/>
              </g>
            </svg>
            <style>
              @keyframes spin {
                from { transform: rotate(0deg); }
                to { transform: rotate(360deg); }
              }
            </style>
          `;
          
          simpleDrone.style.cssText = `
            position: fixed;
            left: ${centerX}px;
            top: ${startY}px;
            width: ${droneSize}px;
            height: ${droneSize}px;
            z-index: 10020;
            pointer-events: none;
          `;
          
          document.body.appendChild(simpleDrone);
          
          // Add shadow to drone
          const droneShadow = document.createElement("div");
          droneShadow.style.cssText = `
            position: fixed;
            left: ${centerX + droneSize * 0.02}px;
            top: ${startY + droneSize + 10}px;
            width: ${droneSize * 0.96}px;
            height: 18px;
            background: radial-gradient(ellipse, rgba(0, 0, 0, 0.25) 0%, rgba(0, 0, 0, 0.12) 40%, transparent 70%);
            border-radius: 50%;
            z-index: 10019;
            pointer-events: none;
          `;
          document.body.appendChild(droneShadow);
          
          console.log("Drone element and shadow added to page");
          
          // Create the sliding effect by transforming the main content and footer
          const slidingContent = document.createElement("div");
          slidingContent.id = "sliding-content";
          slidingContent.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh;
            background: white;
            z-index: 9998;
            transform: translateY(100%);
            overflow: auto;
          `;
          
          // Copy the actual content (not innerHTML to avoid losing event listeners)
          const contentClone = mainContent.cloneNode(true);
          const footerClone = document.querySelector("footer")?.cloneNode(true);
          
          // Make sure the cloned content is visible
          contentClone.style.opacity = "1";
          if (footerClone) {
            footerClone.style.display = "block";
          }
          
          slidingContent.appendChild(contentClone);
          if (footerClone) {
            slidingContent.appendChild(footerClone);
          }
          
          document.body.appendChild(slidingContent);
          
          // Ensure navigation bar stays visible during animation
          const navbar = document.getElementById("navbar");
          if (navbar) {
            navbar.style.zIndex = "10010";
          }
          
          console.log("Sliding content created with cloned content and footer");
          
          // Animation: drone and page slide up together
          setTimeout(() => {
            console.log("Starting drone and page slide animation...");
            
            // Drone flies up to position above the sliding page
            const droneDeliveryY = -droneSize - 50; // Position above the sliding page
            simpleDrone.style.transition = "top 2.5s ease-in-out";
            simpleDrone.style.top = droneDeliveryY + "px";
            
            // Shadow follows drone
            droneShadow.style.transition = "top 2.5s ease-in-out";
            droneShadow.style.top = droneDeliveryY + droneSize + 10 + "px";
            
            // Page slides up shortly after drone starts
            setTimeout(() => {
              console.log("Starting page slide up...");
              slidingContent.style.transition = "transform 2s ease-in-out";
              slidingContent.style.transform = "translateY(0)";
            }, 300);
            
            // After delivery, drone continues up and disappears
            setTimeout(() => {
              console.log("Drone departing...");
              simpleDrone.style.transition = "top 1.5s ease-in-out";
              simpleDrone.style.top = endY + "px";
              
              // Shadow follows departing drone and fades out
              droneShadow.style.transition = "top 1.5s ease-in-out, opacity 1.5s ease-in-out";
              droneShadow.style.top = endY + droneSize + 10 + "px";
              droneShadow.style.opacity = "0";
              
              // Replace the original content with the sliding content
              setTimeout(() => {
                console.log("Finalizing page...");
                
                // Show original content and footer
                if (mainContent) {
                  mainContent.style.opacity = "1";
                }
                
                const footer = document.querySelector("footer");
                if (footer) {
                  footer.style.display = "";
                }
                
                // Remove sliding content and transition overlay
                slidingContent.remove();
                pageTransition.style.opacity = "0";
                pageTransition.style.pointerEvents = "none";
                
                // Clean up drone and shadow
                setTimeout(() => {
                  console.log("Cleaning up drone...");
                  simpleDrone.remove();
                  droneShadow.remove();
                  
                  // Initialize cursor drone
                  setTimeout(() => {
                    cursorDroneInitialized = false;
                    initializeCursorDrone();
                  }, 500);
                }, 1500);
              }, 1000);
            }, 2800);
          }, 500);
          
          return; // Skip the complex animation
        } else {
          // Normal page load or home page with drone transition flag
          if (mainContent) {
            mainContent.style.opacity = "1";
          }
          
          // Ensure footer is visible for normal page loads
          const footer = document.querySelector("footer");
          if (footer) {
            footer.style.display = "";
          }

          // Clear drone transition flag if we're on home page
          if (isDroneTransition && window.location.pathname === "/") {
            sessionStorage.removeItem("droneTransition");
            console.log("Cleared drone transition flag for home page");
          }
        }
      }

      // Reset animation state
      function resetPageTransition() {
        const pageTransition = document.getElementById("page-transition");
        const pageOverlay = document.getElementById("page-overlay");
        const droneFlight = document.getElementById("drone-flight");
        const droneCable = document.getElementById("drone-cable");

        if (pageTransition && pageOverlay && droneFlight) {
          pageTransition.style.opacity = "0";
          pageTransition.style.pointerEvents = "none";

          // Reset drone position (hidden)
          droneFlight.style.transition = "none";
          droneFlight.style.transform = "translateX(-50%) translateY(100vh)";
          droneFlight.style.opacity = "0";

          // Reset cable
          if (droneCable) {
            droneCable.style.height = "0";
            droneCable.style.transition = "none";
          }

          // Reset page overlay
          pageOverlay.style.transition = "none";
          pageOverlay.style.transform = "translateY(100%)";

          // Clear page content
          const pageContent = document.getElementById("page-content");
          if (pageContent) {
            pageContent.innerHTML = "";
          }

          isTransitioning = false;
        }
      }

      // Intercept navigation clicks
      function interceptNavigation() {
        const navLinks = document.querySelectorAll('a[href^="/"], a[href^="./"], a[href^="../"]');

        navLinks.forEach((link) => {
          link.addEventListener("click", (e) => {
            const href = link.getAttribute("href");
            const currentPath = window.location.pathname;

            // Skip if it's the same page or external link
            if (
              href === currentPath ||
              href.startsWith("http") ||
              href.startsWith("mailto") ||
              href.startsWith("tel")
            ) {
              return;
            }

            // Skip if it's a hash link on the same page
            if (href.startsWith("#")) {
              return;
            }

            // Skip drone animation if navigating to home page
            if (href === "/" || href === "/index.html") {
              return; // Let normal navigation happen without drone animation
            }

            e.preventDefault();
            animatePageTransition(href);
          });
        });
      }

      // Mobile menu functionality
      function initializeMobileMenu() {
        const mobileMenuBtn = document.getElementById("mobile-menu-btn");
        const mobileMenuOverlay = document.getElementById("mobile-menu-overlay");
        const hamburgerLines = document.querySelectorAll(".hamburger-line");
        const navLogo = document.querySelector(".nav-logo");
        let isMenuOpen = false;

        if (mobileMenuBtn && mobileMenuOverlay) {
          mobileMenuBtn.addEventListener("click", () => {
            isMenuOpen = !isMenuOpen;

            if (isMenuOpen) {
              // Open menu
              mobileMenuOverlay.style.transform = "translateX(0)";
              mobileMenuBtn.classList.add("menu-open");

              // Animate hamburger to X
              hamburgerLines[0].style.transform = "rotate(45deg) translate(4px, 3px)";
              hamburgerLines[0].style.backgroundColor = "#000000";
              hamburgerLines[1].style.opacity = "0";
              hamburgerLines[2].style.transform = "rotate(-45deg) translate(7px, -6px)";
              hamburgerLines[2].style.backgroundColor = "#000000";

              // Change logo color to brown (stone-600)
              if (navLogo) {
                navLogo.style.transition = "color 0.3s ease";
                navLogo.style.color = "rgb(138, 116, 86)"; // stone-600 color
              }

              // Prevent body scroll
              document.body.style.overflow = "hidden";
            } else {
              // Close menu
              mobileMenuOverlay.style.transform = "translateX(100%)";
              mobileMenuBtn.classList.remove("menu-open");

              // Animate X back to hamburger
              hamburgerLines[0].style.transform = "none";
              hamburgerLines[0].style.backgroundColor = "";
              hamburgerLines[1].style.opacity = "1";
              hamburgerLines[2].style.transform = "none";
              hamburgerLines[2].style.backgroundColor = "";

              // Reset logo color
              if (navLogo) {
                navLogo.style.color = "";
              }

              // Restore body scroll
              document.body.style.overflow = "";
            }
          });

          // Close menu when clicking on links
          const menuLinks = mobileMenuOverlay.querySelectorAll("a");
          menuLinks.forEach((link) => {
            link.addEventListener("click", () => {
              if (isMenuOpen) {
                mobileMenuBtn.click(); // Trigger close
              }
            });
          });

          // Close menu on outside click
          mobileMenuOverlay.addEventListener("click", (e) => {
            if (e.target === mobileMenuOverlay && isMenuOpen) {
              mobileMenuBtn.click(); // Trigger close
            }
          });
        }
      }

      // Cursor following drone functionality
      function initializeCursorDrone() {
        if (cursorDroneInitialized) return;
        
        const cursor = { x: 0, y: 0 };
        const dronePosition = { x: 0, y: 0 };
        
        // Create cursor drone element
        const cursorDrone = document.getElementById("cursor-drone");
        if (!cursorDrone) return;
        
        // Add drone SVG
        cursorDrone.innerHTML = `
          <svg viewBox="0 0 200 200" fill="none" xmlns="http://www.w3.org/2000/svg" style="width: 100%; height: 100%;">
            <!-- Drone Body -->
            <g class="cursor-drone-body">
              <rect x="80" y="90" width="40" height="20" rx="4" fill="#1d4ed8" stroke="#1e40af" stroke-width="2"/>
              <circle cx="100" cy="105" r="6" fill="#1f2937" stroke="#111827" stroke-width="1"/>
              <circle cx="100" cy="105" r="3" fill="#000000"/>
              <rect x="65" y="95" width="20" height="3" rx="1" fill="#374151"/>
              <rect x="115" y="95" width="20" height="3" rx="1" fill="#374151"/>
              <rect x="98" y="75" width="4" height="20" rx="2" fill="#374151"/>
              <rect x="98" y="105" width="4" height="20" rx="2" fill="#374151"/>
            </g>
            
            <!-- Spinning Propellers -->
            <g class="propeller" style="animation: cursorSpin 0.1s linear infinite; transform-origin: 75px 85px;">
              <circle cx="75" cy="85" r="12" fill="none" stroke="#60a5fa" stroke-width="1" opacity="0.6"/>
              <line x1="66" y1="85" x2="84" y2="85" stroke="#60a5fa" stroke-width="1"/>
              <line x1="75" y1="76" x2="75" y2="94" stroke="#60a5fa" stroke-width="1"/>
            </g>
            
            <g class="propeller" style="animation: cursorSpin 0.1s linear infinite; transform-origin: 125px 85px;">
              <circle cx="125" cy="85" r="12" fill="none" stroke="#60a5fa" stroke-width="1" opacity="0.6"/>
              <line x1="116" y1="85" x2="134" y2="85" stroke="#60a5fa" stroke-width="1"/>
              <line x1="125" y1="76" x2="125" y2="94" stroke="#60a5fa" stroke-width="1"/>
            </g>
            
            <g class="propeller" style="animation: cursorSpin 0.1s linear infinite; transform-origin: 75px 115px;">
              <circle cx="75" cy="115" r="12" fill="none" stroke="#60a5fa" stroke-width="1" opacity="0.6"/>
              <line x1="66" y1="115" x2="84" y2="115" stroke="#60a5fa" stroke-width="1"/>
              <line x1="75" y1="106" x2="75" y2="124" stroke="#60a5fa" stroke-width="1"/>
            </g>
            
            <g class="propeller" style="animation: cursorSpin 0.1s linear infinite; transform-origin: 125px 115px;">
              <circle cx="125" cy="115" r="12" fill="none" stroke="#60a5fa" stroke-width="1" opacity="0.6"/>
              <line x1="116" y1="115" x2="134" y2="115" stroke="#60a5fa" stroke-width="1"/>
              <line x1="125" y1="106" x2="125" y2="124" stroke="#60a5fa" stroke-width="1"/>
            </g>
            
            <!-- Landing gear -->
            <rect x="90" y="115" width="1" height="6" fill="#6b7280"/>
            <rect x="109" y="115" width="1" height="6" fill="#6b7280"/>
            <rect x="88" y="120" width="5" height="1" rx="0.5" fill="#6b7280"/>
            <rect x="107" y="120" width="5" height="1" rx="0.5" fill="#6b7280"/>
            
            <!-- LED lights -->
            <circle cx="92" cy="92" r="1" fill="#ef4444" opacity="0.8"/>
            <circle cx="108" cy="92" r="1" fill="#22c55e" opacity="0.8"/>
          </svg>
        `;
        
        cursorDrone.style.transform = "translate(-50%, -50%)";
        cursorDrone.style.opacity = "0";
        
        // Track cursor position
        document.addEventListener("mousemove", (e) => {
          cursor.x = e.clientX;
          cursor.y = e.clientY;
        });
        
        // Mouse enter/leave events
        document.addEventListener("mouseenter", () => {
          cursorDrone.style.opacity = "1";
        });
        
        document.addEventListener("mouseleave", () => {
          cursorDrone.style.opacity = "0";
        });
        
        // Smooth following animation
        function animateCursorDrone() {
          const distanceX = cursor.x - dronePosition.x;
          const distanceY = cursor.y - dronePosition.y;
          
          // Easing factor for smooth following
          const easing = 0.1;
          
          // Update drone position with easing
          dronePosition.x += distanceX * easing;
          dronePosition.y += distanceY * easing;
          
          // Apply transform
          cursorDrone.style.transform = `translate(${dronePosition.x - 50}px, ${dronePosition.y - 50}px)`;
          
          cursorDroneAnimationId = requestAnimationFrame(animateCursorDrone);
        }
        
        // Start animation
        animateCursorDrone();
        cursorDroneInitialized = true;
      }

      // Initialize all components on page load

      // Navigation scroll effect - only on home page
      document.addEventListener("DOMContentLoaded", () => {
        // Handle drone page load if coming from transition
        handleDronePageLoad();

        // Initialize page transition
        resetPageTransition();
        interceptNavigation();

        // Initialize mobile menu
        initializeMobileMenu();
        
        // Initialize cursor drone
        initializeCursorDrone();

        // Navigation scroll effect - only on home page
        if (isHomePage) {
          const navbar = document.getElementById("navbar");
          const navContainer = navbar?.querySelector(".container-max");
          const navLogo = navbar?.querySelector(".nav-logo");
          const navLinks = navbar?.querySelectorAll(".nav-link");
          const navCta = navbar?.querySelector(".nav-cta");
          const navMobileBtn = navbar?.querySelector(".nav-mobile-btn");

          let isScrolled = false;

          function updateNavbar() {
            const scrollY = window.scrollY;
            const shouldBeScrolled = scrollY > window.innerHeight * 0.8; // 80% of viewport height

            if (shouldBeScrolled && !isScrolled) {
              // Scrolled state
              isScrolled = true;
              navbar?.classList.add(
                "bg-white/95",
                "backdrop-blur-md",
                "shadow-lg"
              );
              navbar?.classList.remove("bg-transparent");
              navContainer?.classList.add("py-4");
              navContainer?.classList.remove("py-6");

              // Update logo color
              navLogo?.classList.add("text-primary-600");
              navLogo?.classList.remove("text-white");

              // Update nav links
              navLinks?.forEach((link) => {
                link.classList.add("text-gray-700", "hover:text-primary-600");
                link.classList.remove("text-white", "hover:text-primary-200");
              });

              // Update CTA button
              navCta?.classList.add("btn-primary");
              navCta?.classList.remove("btn-secondary-modern");

              // Update mobile button hamburger lines
              const hamburgerLines = navMobileBtn?.querySelectorAll(".hamburger-line");
              hamburgerLines?.forEach((line) => {
                line.classList.add("bg-gray-700");
                line.classList.remove("bg-white");
              });
            } else if (!shouldBeScrolled && isScrolled) {
              // Transparent state
              isScrolled = false;
              navbar?.classList.remove(
                "bg-white/95",
                "backdrop-blur-md",
                "shadow-lg"
              );
              navbar?.classList.add("bg-transparent");
              navContainer?.classList.remove("py-4");
              navContainer?.classList.add("py-6");

              // Update logo color
              navLogo?.classList.remove("text-primary-600");
              navLogo?.classList.add("text-white");

              // Update nav links
              navLinks?.forEach((link) => {
                link.classList.remove(
                  "text-gray-700",
                  "hover:text-primary-600"
                );
                link.classList.add("text-white", "hover:text-primary-200");
              });

              // Update CTA button
              navCta?.classList.remove("btn-primary");
              navCta?.classList.add("btn-secondary-modern");

              // Update mobile button hamburger lines
              const hamburgerLines = navMobileBtn?.querySelectorAll(".hamburger-line");
              hamburgerLines?.forEach((line) => {
                line.classList.remove("bg-gray-700");
                line.classList.add("bg-white");
              });
            }
          }

          // Initial check
          updateNavbar();

          // Listen for scroll events
          window.addEventListener("scroll", updateNavbar);
        }
      });
    </script>

    <!-- Styles are imported from separate CSS files -->

    <footer class="bg-gray-900 text-white">
      <div class="container-max section-padding">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
          <div class="col-span-1 md:col-span-2">
            <h3 class="text-xl font-bold mb-4">NJ Drones</h3>
            <p class="text-gray-300 mb-4">
              Professional drone videography services capturing breathtaking
              aerial footage for real estate, weddings, automotive, and business
              promotions.
            </p>
            <div class="flex space-x-4">
              <a
                href="#"
                class="text-gray-400 hover:text-white transition-colors"
              >
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path
                    d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"
                  ></path>
                </svg>
              </a>
              <a
                href="#"
                class="text-gray-400 hover:text-white transition-colors"
              >
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path
                    d="M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z"
                  ></path>
                </svg>
              </a>
              <a
                href="#"
                class="text-gray-400 hover:text-white transition-colors"
              >
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path
                    d="M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.09.111.105.208.078.322-.09.36-.293 1.175-.334 1.334-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.754-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146C9.57 23.812 10.763 24.009 12.017 24.009c6.624 0 11.99-5.367 11.99-11.988C24.007 5.367 18.641.001.012.001z"
                  ></path>
                </svg>
              </a>
            </div>
          </div>

          <div>
            <h4 class="text-lg font-semibold mb-4">Services</h4>
            <ul class="space-y-2">
              <li>
                <a
                  href="/services/real-estate"
                  class="text-gray-300 hover:text-white transition-colors"
                  >Real Estate</a
                >
              </li>
              <li>
                <a
                  href="/services/wedding"
                  class="text-gray-300 hover:text-white transition-colors"
                  >Wedding</a
                >
              </li>
              <li>
                <a
                  href="/services/engagement"
                  class="text-gray-300 hover:text-white transition-colors"
                  >Engagement</a
                >
              </li>
              <li>
                <a
                  href="/services/automotive"
                  class="text-gray-300 hover:text-white transition-colors"
                  >Automotive</a
                >
              </li>
              <li>
                <a
                  href="/services/marine"
                  class="text-gray-300 hover:text-white transition-colors"
                  >Marine</a
                >
              </li>
              <li>
                <a
                  href="/services/business"
                  class="text-gray-300 hover:text-white transition-colors"
                  >Business</a
                >
              </li>
            </ul>
          </div>

          <div>
            <h4 class="text-lg font-semibold mb-4">Contact</h4>
            <ul class="space-y-2 text-gray-300">
              <li>📧 info@NJdrones.com</li>
              <li>📱 (555) 123-4567</li>
              <li>📍 New Jersey & Surrounding Areas</li>
              <li>⏰ Available 7 Days a Week</li>
            </ul>
          </div>
        </div>

        <div
          class="border-t border-gray-800 mt-8 pt-8 text-center text-gray-400"
        >
          <p>&copy; 2024 NJ Drones. All rights reserved.</p>
        </div>
      </div>
    </footer>
  </body>
</html>
